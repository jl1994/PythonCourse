image:
  name: hashicorp/terraform:light
  entrypoint:
    - "usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" 

variables:
  TF_STATE_NAME: default
  TF_CACHE_KEY: default
  TF_CLI_CONFIG_FILE: $CI_PROJECT_DIR/.terraformrc


before_script: 
  - mkdir $HOME/.aws && touch $HOME/.aws/credentials $HOME/.aws/config
  - mkdir ~/.ssh ; touch ~/.ssh/config
  - echo "${RSA}" > $HOME/.ssh/id_rsa; chmod 600 $HOME/.ssh/id_rsa
  - echo -e "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config
  - for i in credentials config; do echo "[${AWS_TERRAFORM_PROFILE}]" >> $HOME/.aws/$i; done
  - echo "aws_access_key_id= ${AWS_ACCESS_KEY_ID}" >> $HOME/.aws/credentials
  - echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> $HOME/.aws/credentials
  - echo "region = ${AWS_DEFAULT_REGION}" >> $HOME/.aws/config
  - rm -rf .terraform # Delete old states from the infrastructure

stages:
  - container_scanning
  - fmt_validate
  - plan
  - apply

format:
  stage: fmt_validate
  variables:
    GIT_STRATEGY: clone
#  tags:
#   - aws-cicd # Running on Finkargo Cloud Private Runner
  script:
    - terraform get -update
    - terraform init
    - terraform fmt
  only:
    - main

validate:
  stage: fmt_validate
  variables:
    GIT_STRATEGY: clone
#  tags:
#   - aws-cicd # Running on Finkargo Cloud Private Runner
  script:
    - terraform get -update
    - terraform init
    - terraform validate
  needs: ["format"]
  only:
    - main

plan:
  stage: plan
  variables:
    GIT_STRATEGY: clone
#  tags:
#   - aws-cicd # Running on Finkargo Cloud Private Runner
  script:
    - terraform get -update
    - terraform init
    - terraform plan -out plan.tfplan
  needs: ["validate"]
  only:
    - main

  artifacts:
    when: always
    paths:
      - plan.tfplan

deploy:
  stage: apply
  variables:
    GIT_STRATEGY: clone
#  tags:
#   - aws-cicd # Running on Finkargo Cloud Private Runner
  script:
    - terraform get -update
    - terraform init
    - terraform apply -input=false plan.tfplan
  needs: ["plan"]
  only:
    - main
  when: manual

include:
  - template: Jobs/SAST-IaC.gitlab-ci.yml

iac-sast:
  stage: plan